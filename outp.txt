cuda
conv1.weight
bn1.weight
bn1.bias
bn1.running_mean
bn1.running_var
bn1.num_batches_tracked
layer1.0.conv1.weight
layer1.0.bn1.weight
layer1.0.bn1.bias
layer1.0.bn1.running_mean
layer1.0.bn1.running_var
layer1.0.bn1.num_batches_tracked
layer1.0.conv2.weight
layer1.0.bn2.weight
layer1.0.bn2.bias
layer1.0.bn2.running_mean
layer1.0.bn2.running_var
layer1.0.bn2.num_batches_tracked
layer1.1.conv1.weight
layer1.1.bn1.weight
layer1.1.bn1.bias
layer1.1.bn1.running_mean
layer1.1.bn1.running_var
layer1.1.bn1.num_batches_tracked
layer1.1.conv2.weight
layer1.1.bn2.weight
layer1.1.bn2.bias
layer1.1.bn2.running_mean
layer1.1.bn2.running_var
layer1.1.bn2.num_batches_tracked
layer2.0.conv1.weight
layer2.0.bn1.weight
layer2.0.bn1.bias
layer2.0.bn1.running_mean
layer2.0.bn1.running_var
layer2.0.bn1.num_batches_tracked
layer2.0.conv2.weight
layer2.0.bn2.weight
layer2.0.bn2.bias
layer2.0.bn2.running_mean
layer2.0.bn2.running_var
layer2.0.bn2.num_batches_tracked
layer2.0.shortcut.0.weight
layer2.0.shortcut.1.weight
layer2.0.shortcut.1.bias
layer2.0.shortcut.1.running_mean
layer2.0.shortcut.1.running_var
layer2.0.shortcut.1.num_batches_tracked
layer2.1.conv1.weight
layer2.1.bn1.weight
layer2.1.bn1.bias
layer2.1.bn1.running_mean
layer2.1.bn1.running_var
layer2.1.bn1.num_batches_tracked
layer2.1.conv2.weight
layer2.1.bn2.weight
layer2.1.bn2.bias
layer2.1.bn2.running_mean
layer2.1.bn2.running_var
layer2.1.bn2.num_batches_tracked
layer3.0.conv1.weight
layer3.0.bn1.weight
layer3.0.bn1.bias
layer3.0.bn1.running_mean
layer3.0.bn1.running_var
layer3.0.bn1.num_batches_tracked
layer3.0.conv2.weight
layer3.0.bn2.weight
layer3.0.bn2.bias
layer3.0.bn2.running_mean
layer3.0.bn2.running_var
layer3.0.bn2.num_batches_tracked
layer3.0.shortcut.0.weight
layer3.0.shortcut.1.weight
layer3.0.shortcut.1.bias
layer3.0.shortcut.1.running_mean
layer3.0.shortcut.1.running_var
layer3.0.shortcut.1.num_batches_tracked
layer3.1.conv1.weight
layer3.1.bn1.weight
layer3.1.bn1.bias
layer3.1.bn1.running_mean
layer3.1.bn1.running_var
layer3.1.bn1.num_batches_tracked
layer3.1.conv2.weight
layer3.1.bn2.weight
layer3.1.bn2.bias
layer3.1.bn2.running_mean
layer3.1.bn2.running_var
layer3.1.bn2.num_batches_tracked
layer4.0.conv1.weight
layer4.0.bn1.weight
layer4.0.bn1.bias
layer4.0.bn1.running_mean
layer4.0.bn1.running_var
layer4.0.bn1.num_batches_tracked
layer4.0.conv2.weight
layer4.0.bn2.weight
layer4.0.bn2.bias
layer4.0.bn2.running_mean
layer4.0.bn2.running_var
layer4.0.bn2.num_batches_tracked
layer4.0.shortcut.0.weight
layer4.0.shortcut.1.weight
layer4.0.shortcut.1.bias
layer4.0.shortcut.1.running_mean
layer4.0.shortcut.1.running_var
layer4.0.shortcut.1.num_batches_tracked
layer4.1.conv1.weight
layer4.1.bn1.weight
layer4.1.bn1.bias
layer4.1.bn1.running_mean
layer4.1.bn1.running_var
layer4.1.bn1.num_batches_tracked
layer4.1.conv2.weight
layer4.1.bn2.weight
layer4.1.bn2.bias
layer4.1.bn2.running_mean
layer4.1.bn2.running_var
layer4.1.bn2.num_batches_tracked
linear.weight
linear.bias
122
122
Files already downloaded and verified
Files already downloaded and verified
10000
50000
REDNet30(
  (conv_layers): Sequential(
    (0): Sequential(
      (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (1): ReLU(inplace=True)
      (2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): Sequential(
      (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace=True)
      (2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (2): Sequential(
      (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace=True)
      (2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (3): Sequential(
      (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace=True)
      (2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (4): Sequential(
      (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace=True)
      (2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (5): Sequential(
      (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace=True)
      (2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (6): Sequential(
      (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace=True)
      (2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (7): Sequential(
      (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace=True)
      (2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (8): Sequential(
      (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace=True)
      (2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (9): Sequential(
      (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace=True)
      (2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (10): Sequential(
      (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace=True)
      (2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (11): Sequential(
      (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace=True)
      (2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (12): Sequential(
      (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace=True)
      (2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (13): Sequential(
      (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace=True)
      (2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (14): Sequential(
      (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace=True)
      (2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (deconv_layers): Sequential(
    (0): Sequential(
      (0): ConvTranspose2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace=True)
      (2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): Sequential(
      (0): ConvTranspose2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace=True)
      (2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (2): Sequential(
      (0): ConvTranspose2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace=True)
      (2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (3): Sequential(
      (0): ConvTranspose2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace=True)
      (2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (4): Sequential(
      (0): ConvTranspose2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace=True)
      (2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (5): Sequential(
      (0): ConvTranspose2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace=True)
      (2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (6): Sequential(
      (0): ConvTranspose2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace=True)
      (2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (7): Sequential(
      (0): ConvTranspose2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace=True)
      (2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (8): Sequential(
      (0): ConvTranspose2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace=True)
      (2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (9): Sequential(
      (0): ConvTranspose2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace=True)
      (2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (10): Sequential(
      (0): ConvTranspose2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace=True)
      (2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (11): Sequential(
      (0): ConvTranspose2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace=True)
      (2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (12): Sequential(
      (0): ConvTranspose2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace=True)
      (2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (13): Sequential(
      (0): ConvTranspose2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace=True)
      (2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (14): ConvTranspose2d(64, 3, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), output_padding=(1, 1))
  )
  (relu): ReLU(inplace=True)
)
mu and sigma :  tensor(2.8560) 0.9226596208812822
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(11, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(11, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(11, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(11, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(16, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(11, device='cuda:0')
Corrects :  tensor(9, device='cuda:0')
Corrects :  tensor(10, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(10, device='cuda:0')
Corrects :  tensor(9, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(16, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(11, device='cuda:0')
Corrects :  tensor(10, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(11, device='cuda:0')
Corrects :  tensor(16, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(16, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(11, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(9, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(10, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(11, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(16, device='cuda:0')
Corrects :  tensor(16, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(11, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(8, device='cuda:0')
Corrects :  tensor(10, device='cuda:0')
Corrects :  tensor(10, device='cuda:0')
Corrects :  tensor(16, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(11, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(16, device='cuda:0')
Corrects :  tensor(16, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(16, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(10, device='cuda:0')
Corrects :  tensor(10, device='cuda:0')
Corrects :  tensor(11, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(10, device='cuda:0')
Corrects :  tensor(8, device='cuda:0')
Corrects :  tensor(6, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(10, device='cuda:0')
Corrects :  tensor(10, device='cuda:0')
Corrects :  tensor(6, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(10, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(10, device='cuda:0')
Corrects :  tensor(11, device='cuda:0')
Corrects :  tensor(11, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(10, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(11, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(9, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(10, device='cuda:0')
Corrects :  tensor(10, device='cuda:0')
Corrects :  tensor(10, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(10, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(10, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(11, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(10, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(11, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(11, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(11, device='cuda:0')
Corrects :  tensor(11, device='cuda:0')
Corrects :  tensor(10, device='cuda:0')
Corrects :  tensor(8, device='cuda:0')
Corrects :  tensor(7, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(11, device='cuda:0')
Corrects :  tensor(10, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(11, device='cuda:0')
Corrects :  tensor(11, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(9, device='cuda:0')
Corrects :  tensor(10, device='cuda:0')
Corrects :  tensor(9, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(10, device='cuda:0')
Corrects :  tensor(10, device='cuda:0')
Corrects :  tensor(10, device='cuda:0')
Corrects :  tensor(9, device='cuda:0')
Corrects :  tensor(8, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(9, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(16, device='cuda:0')
Corrects :  tensor(16, device='cuda:0')
Corrects :  tensor(16, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(11, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(9, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(11, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(11, device='cuda:0')
Corrects :  tensor(10, device='cuda:0')
Corrects :  tensor(11, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(11, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(9, device='cuda:0')
Corrects :  tensor(11, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(10, device='cuda:0')
Corrects :  tensor(11, device='cuda:0')
Corrects :  tensor(10, device='cuda:0')
Corrects :  tensor(10, device='cuda:0')
Corrects :  tensor(10, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(16, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(16, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(11, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(11, device='cuda:0')
Corrects :  tensor(16, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(16, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(11, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(11, device='cuda:0')
Corrects :  tensor(11, device='cuda:0')
Corrects :  tensor(10, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(10, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(11, device='cuda:0')
Corrects :  tensor(11, device='cuda:0')
Corrects :  tensor(10, device='cuda:0')
Corrects :  tensor(9, device='cuda:0')
Corrects :  tensor(9, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(11, device='cuda:0')
Corrects :  tensor(11, device='cuda:0')
Corrects :  tensor(11, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(9, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(16, device='cuda:0')
Corrects :  tensor(16, device='cuda:0')
Corrects :  tensor(16, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(16, device='cuda:0')
Corrects :  tensor(16, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(11, device='cuda:0')
Corrects :  tensor(10, device='cuda:0')
Corrects :  tensor(10, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(11, device='cuda:0')
Corrects :  tensor(11, device='cuda:0')
Corrects :  tensor(11, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(11, device='cuda:0')
Corrects :  tensor(11, device='cuda:0')
Corrects :  tensor(8, device='cuda:0')
Corrects :  tensor(8, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(11, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(11, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(14, device='cuda:0')
Corrects :  tensor(15, device='cuda:0')
Corrects :  tensor(10, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(11, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(13, device='cuda:0')
Corrects :  tensor(12, device='cuda:0')
Corrects :  tensor(10, device='cuda:0')
Corrects :  tensor(9, device='cuda:0')
normal :  0.870049504950495
random :  0.8601485148514851
fgsm :  0.7920792079207921
R-fgsm :  0.7772277227722773
BIM :  0.7227722772277227
